# This is a basic workflow to help you get started with Actions

name: Workflow to automate deployment of code - 'Apply'

# Controls when the workflow will run
on:
  workflow_dispatch:

  # # Triggers the workflow on push or pull request events but only for the "main" branch
  # push:
  #   branches: [ "main" ]
  # pull_request:
  #   branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
env:
  aws-region: us-east-1
  aws_s3_bucket: priyambuck1
  tfstate_file: terraform.tfstate
  db_table: priyam-dynamo-table


jobs:
  terraforminit:
    # The type of runner that the job will run on
    name: terraforminit
    runs-on: ubuntu-latest
    
    defaults:
      run:
        working-directory: ./modules

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: checkout
      - uses: actions/checkout@v3

      - name: Terraform setup
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.2.6

      - name: AWS Credentials Configuration
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: ${{ env.aws-region }}
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}


      - name: terraform format
        run: 
          terraform fmt
      
      - name: terraform init
        run: 
          terraform init -reconfigure -backend-config="bucket=$aws_s3_bucket" -backend-config="key=$tfstate_file" -backend-config="dynamodb_table=$db_table"

      - name: terraform validate
        run: 
          terraform validate

      - name: terraform plan
        run: 
          terraform plan

      - name: terraform apply
        run: 
          terraform apply -auto-approve